# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Vehicle {
  id: ID!
  licensePlate: String!
  vehicleType: String!
  maxCapacity: Float!
  driver: User!
}

type Delivery {
  id: ID!
  deliveredAt: DateTime!
  status: DeliveryStatus!
  shipment: Shipment!
  vehicle: Vehicle!
  route: Route!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""The status of the delivery."""
enum DeliveryStatus {
  Pending
  InTransit
  Delivered
  Failed
}

type Route {
  id: ID!
  estimatedTime: String!
  from: String!
  to: String!
  deliveries: [Delivery!]!
}

type Shipment {
  id: ID!
  trackingNumber: String!
  weight: Float!
  status: ShipmentStatus!
  user: User!
  route: Route!
  vehicle: Vehicle!
}

"""The status of the shipment."""
enum ShipmentStatus {
  Pending
  Shipped
  InTransit
  Delivered
  Canceled
}

type Order {
  id: ID!
  totalAmount: Float!
  status: OrderStatus!
  orderDate: DateTime!
  user: User!
}

"""The status of the order."""
enum OrderStatus {
  Pending
  Completed
  Canceled
}

type User {
  id: ID!
  name: String!
  email: String!
  phone: String!
  role: String!
  createdAt: DateTime!
  shipments: [Shipment!]!
  orders: [Order!]!
}

type Ticket {
  id: ID!
  issue: String!
  status: TicketStatus!
  user: User!
  createdAt: DateTime!
}

"""The status of the ticket."""
enum TicketStatus {
  Opened
  Closed
  InProgress
}

type Rate {
  id: ID!
  pricePerKg: Float!
  basePrice: Float!
  route: Route!
}

type Payment {
  id: ID!
  amount: Float!
  status: PaymentStatus!
  paymentMethod: String!
  paymentDate: DateTime!
  user: User!
  shipment: Shipment!
}

"""The status of the payment."""
enum PaymentStatus {
  Paid
  Failed
  Pending
}

type Notification {
  id: ID!
  message: String!
  status: NotificationStatus!
  createdAt: DateTime!
  user: User!
}

"""The status of the notification."""
enum NotificationStatus {
  Unread
  Read
}

type Inventory {
  id: ID!
  productName: String!
  quantity: Float!
  weight: Float!
  location: String!
}

type Document {
  id: ID!
  fileName: String!
  fileType: String!
  url: String!
  uploadedAt: DateTime!
}

type Calculation {
  id: ID!
  weight: Float!
  distance: Float!
  cost: Float!
  calculatedAt: DateTime!
}

type Query {
  findUsers(id: String!): User!
  findVehicles: [Vehicle!]!
  findVehicleById(id: String!): Vehicle!
  findShipments: [Shipment!]!
  findShipmentById(id: String!): Shipment!
  findTickets: [Ticket!]!
  findTicketById(id: String!): Ticket!
  findRoutes: [Route!]!
  findRouteById(id: String!): Route!
  findRates: [Rate!]!
  findRateById(id: String!): Rate!
  findPayments: [Payment!]!
  findPaymentById(id: String!): Payment!
  findOrders: [Order!]!
  findOrderById(id: String!): Order!
  findNotifications: [Notification!]!
  findNotificationById(id: String!): Notification!
  findInventories: [Inventory!]!
  findInventoryById(id: String!): Inventory!
  findDocuments: [Document!]!
  findDocumentById(id: String!): Document!
  findDeliveries: [Delivery!]!
  findDeliveryById(id: String!): Delivery!
  findCalculations: [Calculation!]!
  findCalculationById(id: String!): Calculation!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  createVehicle(createVehicleInput: CreateVehicleInput!): Vehicle!
  updateVehicle(updateVehicleInput: UpdateVehicleInput!): Vehicle!
  deleteVehicle(id: String!): Vehicle!
  createShipment(createShipmentInput: CreateShipmentInput!): Shipment!
  updateShipment(updateShipmentInput: UpdateShipmentInput!): Shipment!
  deleteShipment(id: String!): Shipment!
  createTicket(createTicketInput: CreateTicketInput!): Ticket!
  updateTicket(updateTicketInput: UpdateTicketInput!): Ticket!
  deleteTicket(id: String!): Ticket!
  createRoute(createRouteInput: CreateRouteInput!): Route!
  updateRoute(updateRouteInput: UpdateRouteInput!): Route!
  deleteRoute(id: String!): Route!
  createRate(createRateInput: CreateRateInput!): Rate!
  updateRate(updateRateInput: UpdateRateInput!): Rate!
  deleteRate(id: String!): Rate!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  deletePayment(id: String!): Payment!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  deleteOrder(id: String!): Order!
  createNotification(createNotificationInput: CreateNotificationInput!): Notification!
  updateNotification(updateNotificationInput: UpdateNotificationInput!): Notification!
  deleteNotification(id: String!): Notification!
  createInventory(createInventoryInput: CreateInventoryInput!): Inventory!
  updateInventory(updateInventoryInput: UpdateInventoryInput!): Inventory!
  deleteInventory(id: String!): Inventory!
  createDocument(createDocumentInput: CreateDocumentInput!): Document!
  updateDocument(updateDocumentInput: UpdateDocumentInput!): Document!
  deleteDocument(id: String!): Document!
  createDelivery(createDeliveryInput: CreateDeliveryInput!): Delivery!
  updateDelivery(updateDeliveryInput: UpdateDeliveryInput!): Delivery!
  deleteDelivery(id: String!): Delivery!
  createCalculation(createCalculationInput: CreateCalculationInput!): Calculation!
  updateCalculation(updateCalculationInput: UpdateCalculationInput!): Calculation!
  deleteCalculation(id: String!): Calculation!
}

input CreateUserInput {
  email: String!
}

input CreateVehicleInput {
  licensePlate: String!
  vehicleType: String!
  maxCapacity: Float!
}

input UpdateVehicleInput {
  licensePlate: String
  vehicleType: String
  maxCapacity: Float
  id: String!
}

input CreateShipmentInput {
  trackingNumber: String!
  weight: Float!
  status: ShipmentStatus!
}

input UpdateShipmentInput {
  trackingNumber: String
  weight: Float
  status: ShipmentStatus
  id: String!
}

input CreateTicketInput {
  issue: String!
  status: TicketStatus!
}

input UpdateTicketInput {
  issue: String
  status: TicketStatus
  id: String!
}

input CreateRouteInput {
  estimatedTime: String!
  from: String!
  to: String!
}

input UpdateRouteInput {
  estimatedTime: String
  from: String
  to: String
  id: String!
}

input CreateRateInput {
  pricePerKg: Float!
  basePrice: Float!
}

input UpdateRateInput {
  pricePerKg: Float
  basePrice: Float
  id: String!
}

input CreatePaymentInput {
  amount: Float!
  status: PaymentStatus!
  paymentMethod: String!
}

input UpdatePaymentInput {
  amount: Float
  status: PaymentStatus
  paymentMethod: String
  id: String!
}

input CreateOrderInput {
  totalAmount: Float!
  status: OrderStatus!
}

input UpdateOrderInput {
  totalAmount: Float
  status: OrderStatus
  id: String!
}

input CreateNotificationInput {
  message: String!
}

input UpdateNotificationInput {
  message: String
  id: String!
}

input CreateInventoryInput {
  productName: String!
  quantity: Float!
  weight: Float!
  location: String!
}

input UpdateInventoryInput {
  productName: String
  quantity: Float
  weight: Float
  location: String
  id: String!
}

input CreateDocumentInput {
  fileName: String!
  fileType: String!
  url: String!
}

input UpdateDocumentInput {
  fileName: String
  fileType: String
  url: String
  id: String!
}

input CreateDeliveryInput {
  status: DeliveryStatus!
}

input UpdateDeliveryInput {
  status: DeliveryStatus
  id: String!
}

input CreateCalculationInput {
  weight: Float!
  distance: Float!
  cost: Float!
}

input UpdateCalculationInput {
  weight: Float
  distance: Float
  cost: Float
  id: String!
}